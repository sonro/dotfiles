#!/usr/bin/env bash
set -e

HELP="\
DOTFILE SETUP
=============
sonro <sonro@gmx.com>

Setup software and configurations for development on *nix

USAGE: setup [OPTIONS]

OPTIONS:
	-h, --help       Prints help information
	-s, --server     Setup without node and neovim (for a more minimal install)
	-n, --new        Replace existing config files

If any combination of these flags are set: only those functions will run
	-f, --files      Setup files
	-i, --install    Install software
	-p, --plugins	 Install plugins
"

# Config
DOTFILE_DIR="$HOME/.dotfiles"

# Options
FRESH=false
SERVER=false
EXPLICIT=false
FILES=false
INSTALL=false
PLUGINS=false

main() {
	parse_args "$@"

	if [[ "$EXPLICIT" == false || "$FILES" == true ]]; then
		source "$DOTFILE_DIR/setup-src/setupfiles.bash"
		setup_files "$SERVER" "$DOTFILE_DIR" "$FRESH"
	fi

	if [[ "$EXPLICIT" == false || "$INSTALL" == true ]]; then
		source "$DOTFILE_DIR/setup-src/installsoftware.bash"
		install_software "$SERVER" "$DOTFILE_DIR"
	fi

	if [[ "$EXPLICIT" == false || "$PLUGINS" == true ]]; then
		install_plugins
	fi

	return 0
}

parse_args() {
	for opt in "$@"; do
		case "$opt" in
			-n|--new) FRESH=true;;
			-s|--server) SERVER=true;;
			-h|--help)
				echo "$HELP"
				exit 0
				;;
			-f|--files) 
				EXPLICIT=true
				FILES=true
				;;
			-i|--install) 
				EXPLICIT=true
				INSTALL=true
				;;
			-p|--plugins) 
				EXPLICIT=true
				PLUGINS=true
				;;
		esac
	done

	return 0
}

install_plugins() {
	local vim_plug_url="https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"

	# set loaction of vim-plug install
	local plug_local_file
	if [[ "$SERVER" == true ]]; then
		plug_local_file="$DOTFILE_DIR/vim/home/autoload/plug.vim"
	else
		plug_local_file="$HOME/.local/share/nvim/site/autoload/plug.vim"
	fi

	# install vim-plug
	if [[ ! -f "$plug_local_file" || "$FRESH" == true ]]; then
		echo "Installing VimPlug"
		curl -fLo "$plug_local_file" --create-dirs "$vim_plug_url"
	fi

	# install vim plugins
	echo "Installing Vim Plugins"
	if [[ "$SERVER" == true ]]; then
		vim -es -u "$DOTFILE/vim/vimrc" -i NONE -c "PlugInstall" -c "qa" || :
	else
		nvim -es -u "$DOTFILE_DIR/nvim/config/init.vim" \
			-i NONE -c "PlugInstall" -c "qa" || :

		sudo ln -s \
			"$DOTFILE_DIR/nvim/config/plugged/phpactor/bin/phpactor" \
			/usr/local/bin/phpactor
	fi

	# install tmux plugin manager
	local tpm_dir="$HOME/.tmux/plugins/tpm"
	if [[ ! -d "$tpm_dir" || "$FRESH" == true ]]; then
		echo "Installing Tmux Plugins"
		rm -rf "$tpm_dir"
		mkdir -p "$HOME/.tmux/plugins"
		git clone "https://github.com/tmux-plugins/tpm" "$tpm_dir"
		eval "$tpm_dir/bin/install_plugins"
	fi

	return 0
}

main "$@"
